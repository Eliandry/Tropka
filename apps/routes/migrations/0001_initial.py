# Generated by Django 4.2.7 on 2025-10-22 09:57

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("partners", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.CharField(
                        help_text='Идентификатор города, например "moscow"',
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='Название города, например "Москва"', max_length=100
                    ),
                ),
                (
                    "image_url",
                    models.URLField(
                        blank=True, help_text="Ссылка на фото города", null=True
                    ),
                ),
                ("description", models.TextField(help_text="Краткое описание города")),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("bbox", models.JSONField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Город",
                "verbose_name_plural": "Города",
                "db_table": "cities",
            },
        ),
        migrations.CreateModel(
            name="CityArea",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("bbox", models.JSONField(blank=True, null=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("image_url", models.ImageField(blank=True, null=True, upload_to="")),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="areas",
                        to="routes.city",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Interest",
            fields=[
                (
                    "id",
                    models.CharField(
                        help_text='Идентификатор интереса, например "parks"',
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text='Название интереса, например "Парки"', max_length=100
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Описание интереса для показа пользователю"
                    ),
                ),
            ],
            options={
                "verbose_name": "Интерес",
                "verbose_name_plural": "Интересы",
                "db_table": "interests",
            },
        ),
        migrations.CreateModel(
            name="Mood",
            fields=[
                (
                    "id",
                    models.CharField(
                        help_text='Идентификатор настроения, например "explore"',
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text='Название настроения, например "Исследовать"',
                        max_length=100,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Описание настроения для помощи в выборе"
                    ),
                ),
            ],
            options={
                "verbose_name": "Настроение",
                "verbose_name_plural": "Настроения",
                "db_table": "moods",
            },
        ),
        migrations.CreateModel(
            name="Point",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        max_length=400,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(help_text="Название точки", max_length=1000)),
                ("description", models.TextField(help_text="Описание точки")),
                ("tags", models.JSONField(blank=True, default=list)),
                (
                    "image_url",
                    models.URLField(
                        blank=True, help_text="URL фотографии точки", null=True
                    ),
                ),
                (
                    "coordinates_lat",
                    models.DecimalField(
                        decimal_places=6, help_text="Широта", max_digits=9
                    ),
                ),
                (
                    "coordinates_lng",
                    models.DecimalField(
                        decimal_places=6, help_text="Долгота", max_digits=9
                    ),
                ),
                ("address", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "average_visit_duration",
                    models.IntegerField(help_text="Среднее время посещения в минутах"),
                ),
                (
                    "average_cost",
                    models.IntegerField(
                        blank=True, help_text="Средняя стоимость посещения", null=True
                    ),
                ),
                (
                    "is_partner",
                    models.BooleanField(
                        default=False, help_text="Является ли точка партнерской"
                    ),
                ),
                (
                    "partner_tier",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("basic", "Basic"),
                            ("premium", "Premium"),
                            ("vip", "VIP"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "working_hours_json",
                    models.JSONField(
                        blank=True,
                        help_text="Детальный режим работы по дням недели в формате JSON",
                        null=True,
                    ),
                ),
                ("best_visit_time", models.JSONField(default=list)),
                (
                    "is_seasonal",
                    models.BooleanField(
                        default=False,
                        help_text="Сезонное место (например, летние веранды, катки)",
                    ),
                ),
                ("seasonal_months", models.JSONField(default=list)),
                ("view_count", models.IntegerField(default=0)),
                (
                    "success_rate",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=3),
                ),
                ("last_viewed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "area",
                    models.ForeignKey(
                        blank=True,
                        help_text="Район точки",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="routes.cityarea",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        help_text="Город, к которому относится точка",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="routes.city",
                    ),
                ),
                ("interests", models.ManyToManyField(blank=True, to="routes.interest")),
                ("moods", models.ManyToManyField(blank=True, to="routes.mood")),
                (
                    "partner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="partners.partner",
                    ),
                ),
            ],
            options={
                "verbose_name": "Точка интереса",
                "verbose_name_plural": "Точки интереса",
                "db_table": "points",
            },
        ),
        migrations.CreateModel(
            name="PointEmbedding",
            fields=[
                (
                    "point",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="routes.point",
                    ),
                ),
                (
                    "embedding",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(),
                        help_text="Векторное представление описания точки",
                        size=1536,
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "point_embeddings",
            },
        ),
        migrations.CreateModel(
            name="Route",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "total_duration",
                    models.IntegerField(help_text="Общее время прогулки в минутах"),
                ),
                (
                    "total_cost",
                    models.IntegerField(
                        blank=True, help_text="Общий бюджет маршрута", null=True
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Текстовый гид или описание маршрута",
                        null=True,
                    ),
                ),
                ("point_sequence", models.JSONField(default=list)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("going", "Иду гулять"),
                            ("done", "Прошел"),
                            ("cancelled", "Не иду"),
                        ],
                        default="going",
                        help_text="Статус прогулки",
                        max_length=20,
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="routes",
                        to="routes.city",
                    ),
                ),
                ("points", models.ManyToManyField(to="routes.point")),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="Пользователь, которому принадлежит маршрут",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="routes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Маршрут",
                "verbose_name_plural": "Маршруты",
                "db_table": "routes",
            },
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        blank=True, help_text="Оценка маршрута (1–5)", null=True
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True, help_text="Текстовый отзыв", null=True
                    ),
                ),
                (
                    "going",
                    models.BooleanField(
                        default=False,
                        help_text="Планирует ли пользователь идти по маршруту",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "route",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedbacks",
                        to="routes.route",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedbacks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Отзыв",
                "verbose_name_plural": "Отзывы",
                "db_table": "feedback",
            },
        ),
        migrations.AddIndex(
            model_name="route",
            index=models.Index(
                fields=["user", "created_at"], name="routes_user_id_7896ee_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="point",
            index=models.Index(
                fields=["city", "coordinates_lat", "coordinates_lng"],
                name="points_city_id_d7fa81_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="point",
            index=models.Index(fields=["is_partner"], name="points_is_part_6d91c7_idx"),
        ),
        migrations.AddIndex(
            model_name="feedback",
            index=models.Index(
                fields=["going", "created_at"], name="feedback_going_c1d82a_idx"
            ),
        ),
    ]
